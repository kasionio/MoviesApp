{"version":3,"sources":["index.js"],"names":["getListOfGenres","fetch","then","response","json","data","getMoviesTop","getMoviesOfTheDay","showMoviesTop","getMoviesCards","window","dataStore","moviesTop","showMoviesByGenre","currentId","currentGenreId","listOfGenres","find","genre","id","name","moviesByGenre","movies","styles","map","movie","title","getmoviePoster","poster_path","join","renderApp","document","getElementById","innerHTML","App","showfilterByGenre","movieResults","searchMoviesByGenre","isDataLoading","error","content","showMoviesOfTheDay","filter","Promise","all","values","results","genres","moviesOfTheDay","catch","finally","genre_ids","includes","module","hot","accept"],"mappings":"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","file":"framework-2021-1.0-app_basics.d173a032.js","sourceRoot":"..","sourcesContent":["import styles from './style.css';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.dataStore = {\n  currentGenreId: '',\n  listOfGenres: '',\n  moviesTop: '',\n  moviesByGenre: {},\n  moviesOfTheDay: {},\n  isDataLoading: false,\n  error: null,\n};\n\nfunction getListOfGenres() {\n  const listOfGenresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US`;\n  return fetch(listOfGenresUrl)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nfunction getMoviesTop() {\n  const moviesTopUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US&page=1`;\n  return fetch(moviesTopUrl)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nfunction getMoviesOfTheDay() {\n  const moviesOfTheDayUrl = `https://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.MOVIEDB_API_KEY}`;\n  return fetch(moviesOfTheDayUrl)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nfunction showMoviesTop() {\n  return `\n  <h2>TOP movies of all time:</h2> \n  ${getMoviesCards(window.dataStore.moviesTop)}\n  `;\n}\n\nfunction showMoviesByGenre() {\n  let currentId = window.dataStore.currentGenreId;\n  return `\n  <h2>Movies by genre ${\n    currentId ? window.dataStore.listOfGenres.find(genre => genre.id == currentId).name : ''\n  } :</h2>\n  ${getMoviesCards(window.dataStore.moviesByGenre)}\n  `;\n}\n\nfunction getMoviesCards(movies) {\n  return `\n    <div class='${styles['moviesTop']}'>\n      ${movies\n        .map(\n          movie => `\n        <p> ${movie.title}\n        ${getmoviePoster(movie.poster_path)}</p>\n        `,\n        )\n        .join('')}\n      </div>\n  `;\n}\n\nfunction renderApp() {\n  document.getElementById('app-root').innerHTML = `${App()}`;\n}\n\nfunction App() {\n  return `\n    <div>\n    ${showfilterByGenre()} <br><br>       \n    ${movieResults()} <br>\n    </div>`;\n}\n\nwindow.renderApp = renderApp;\nwindow.filter = filter;\nwindow.showMoviesByGenre = showMoviesByGenre;\n\nfilter();\n\nfunction searchMoviesByGenre(currentGenreId) {\n  const moviesFilteredByCurrentGenre = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${currentGenreId}&with_watch_monetization_types=flatrate`;\n  return fetch(moviesFilteredByCurrentGenre)\n    .then(response => response.json())\n    .then(data => (window.dataStore.moviesByGenre = data));\n}\n\nfunction showfilterByGenre() {\n  return `\n  <label for='genres'>\n    Filter by genre:\n  </label>\n  <select \n    name='genres' \n    onchange=\"filter(this.value);\"\n  >\n  <option value=''>\n    --Please choose a genre--\n  </option>\n    ${window.dataStore.listOfGenres.map(\n      genre => `\n      <option \n        value='${genre.id}' \n      > ${genre.name} \n      </option>\n    `,\n    )} \n  </select>\n    `;\n}\n\nfunction movieResults() {\n  const { currentGenreId, isDataLoading, error } = window.dataStore;\n  let content = '';\n  if (!currentGenreId) {\n    content = 'Choose genre from the list';\n  } else {\n    if (isDataLoading) {\n      content = 'Data is loading...';\n    }\n    if (error !== null) {\n      content = error;\n    } else {\n      content = `\n    <div>${showMoviesByGenre()}</div>\n    <div>${showMoviesOfTheDay()}</div>\n    <div>${showMoviesTop()}</div>\n    `;\n    }\n  }\n  return content ? `<div>${content}</div>` : '';\n}\n\nfunction filter(currentGenreId) {\n  window.dataStore.currentGenreId = currentGenreId;\n  window.dataStore.isDataLoading = true;\n  window.dataStore.error = null;\n\n  Promise.all([\n    getMoviesTop(),\n    getListOfGenres(),\n    getMoviesOfTheDay(),\n    searchMoviesByGenre(currentGenreId),\n  ])\n    .then(values => {\n      window.dataStore = {\n        ...window.dataStore,\n        moviesTop: values[0].results,\n        listOfGenres: values[1].genres,\n        moviesOfTheDay: values[2].results,\n        moviesByGenre: values[3].results,\n      };\n      window.dataStore.isDataLoading = false;\n    })\n    .catch(error => {\n      window.dataStore.isDataLoading = false;\n      window.dataStore.error = error;\n    })\n    .finally(renderApp);\n}\n\nfunction getmoviePoster(poster_path) {\n  if (poster_path) {\n    return `<img src='http://image.tmdb.org/t/p/w500/${poster_path}'></img>`;\n  } else {\n    return 'without poster';\n  }\n}\n\nfunction showMoviesOfTheDay() {\n  const COMEDY_GENRE_ID = 35;\n  const ACTION_GENRE_ID = 28;\n  const DOCUMENTARY_GENRE_ID = 99;\n\n  return `\n  <div>\n    <h2>Movies of the day:</h2>\n    <h4> &#128516; Comedy:</h4> \n      ${getMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie => movie.genre_ids.includes(COMEDY_GENRE_ID)),\n      )}\n        <br>\n    <h4> &#128526; Action:</h4> \n      ${getMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie => movie.genre_ids.includes(ACTION_GENRE_ID)),\n      )}\n        <br>\n    <h4> &#129488; Documentary:</h4> \n      ${getMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie =>\n          movie.genre_ids.includes(DOCUMENTARY_GENRE_ID),\n        ),\n      )}\n  </div>\n        `;\n}\n"]}