{"version":3,"sources":["data/dataStore.js","framework/element.js","framework/render.js","data/movieDbAPI.js","data/movieData.js","components/ShowFilterByGenre.js","utils.js","components/GetMoviesCards.js","components/ShowMoviesByGenre.js","components/ShowMoviesOfTheDay.js","components/ShowMoviesTop.js","components/MovieResults.js","components/App.js","index.js"],"names":["dataStore","currentGenreId","listOfGenres","moviesTop","moviesByGenre","moviesOfTheDay","isDataLoading","error","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","renderApp","Component","Target","componentFunction","target","innerHTML","getListOfGenres","fetch","then","response","json","data","genres","getMoviesTop","getMoviesOfTheDay","searchMoviesByGenre","filter","Promise","all","values","results","catch","finally","ShowfilterByGenre","map","id","COMEDY_GENRE_ID","ACTION_GENRE_ID","DOCUMENTARY_GENRE_ID","getMoviePoster","poster_path","src","GetMoviesCards","movies","styles","title","showMoviesByGenre","find","genre","ShowMoviesOfTheDay","movie","genre_ids","ShowMoviesTop","MovieResults","content","App","getElementById"],"mappings":"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","file":"src.54a8c1ed.js","sourceRoot":"..\\src","sourcesContent":["const dataStore = {\n  currentGenreId: '',\n  listOfGenres: '',\n  moviesTop: '',\n  moviesByGenre: {},\n  moviesOfTheDay: {},\n  isDataLoading: false,\n  error: null,\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\n        and regular tags in wrapper functions that expect children as the 2nd param\n       */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\n\nlet Component, Target;\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param componentFunction - Component function or class\n * @param target - DOM element to attach component to\n */\nfunction renderApp(componentFunction = null, target = null) {\n  // Memorize parameters to enable re-render when `renderApp` gets called without arguments\n  if (componentFunction) Component = componentFunction;\n  if (target) Target = target;\n  Target.innerHTML = '';\n  // Ensure that the component gets rebuilt\n  Target.appendChild(<Component />);\n}\n\nexport default renderApp;\n","export default function getListOfGenres() {\n  const listOfGenresUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US`;\n  return fetch(listOfGenresUrl)\n    .then(response => response.json())\n    .then(data => (window.dataStore.listOfGenres = data.genres));\n}\n\nexport function getMoviesTop() {\n  const moviesTopUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US&page=1`;\n  return fetch(moviesTopUrl)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nexport function getMoviesOfTheDay() {\n  const moviesOfTheDayUrl = `https://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.MOVIEDB_API_KEY}`;\n  return fetch(moviesOfTheDayUrl)\n    .then(response => response.json())\n    .then(data => data);\n}\n\nexport function searchMoviesByGenre(currentGenreId) {\n  const moviesFilteredByCurrentGenre = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.MOVIEDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${currentGenreId}&with_watch_monetization_types=flatrate`;\n  return fetch(moviesFilteredByCurrentGenre)\n    .then(response => response.json())\n    .then(data => (window.dataStore.moviesByGenre = data));\n}\n","import renderApp from '../framework/render';\nimport { getMoviesTop, getMoviesOfTheDay, searchMoviesByGenre } from './movieDbAPI';\n\nexport default function filter(currentGenreId) {\n  window.dataStore.currentGenreId = currentGenreId;\n  window.dataStore.isDataLoading = true;\n  window.dataStore.error = null;\n\n  Promise.all([getMoviesTop(), getMoviesOfTheDay(), searchMoviesByGenre(currentGenreId)])\n    .then(values => {\n      window.dataStore = {\n        ...window.dataStore,\n        moviesTop: values[0].results,\n        moviesOfTheDay: values[1].results,\n        moviesByGenre: values[2].results,\n      };\n      window.dataStore.isDataLoading = false;\n    })\n    .catch(error => {\n      window.dataStore.isDataLoading = false;\n      window.dataStore.error = error;\n    })\n    .finally(renderApp);\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport filter from '../data/movieData';\nimport { createElement, createFragment } from '../framework/element';\n\nexport default function ShowfilterByGenre() {\n  return (\n    <>\n      <div>\n        <label For=\"genres\">Search by genre:</label>\n        <select name=\"genres\" onchange={e => filter(e.target.value)}>\n          <option value=\"\">--Please choose a genre--</option>\n          {window.dataStore.listOfGenres.map(({ id, name }) => (\n            <>\n              <option value={id}>{name}</option>\n            </>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n}\n","import { createElement } from './framework/element';\nexport const COMEDY_GENRE_ID = 35;\nexport const ACTION_GENRE_ID = 28;\nexport const DOCUMENTARY_GENRE_ID = 99;\n\nexport default function getMoviePoster(poster_path) {\n  //TODO: extract UI to component\n  if (poster_path) {\n    //return <img src={`http://image.tmdb.org/t/p/w500/${poster_path}`} />;\n    return {\n      src: `http://image.tmdb.org/t/p/w500/${poster_path}`,\n    };\n  } else {\n    return 'without poster';\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport styles from '../style.css';\nimport getMoviePoster from '../utils';\n\nexport default function GetMoviesCards(movies) {\n  return (\n    <>\n      <div class={styles['moviesTop']}>\n        {movies.map(({ title, poster_path }) => (\n          <p>\n            {title}\n            <img src={getMoviePoster(poster_path).src}></img>\n          </p>\n        ))}\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport GetMoviesCards from './GetMoviesCards';\n\nexport default function showMoviesByGenre() {\n  let currentGenreId = window.dataStore.currentGenreId;\n  return (\n    <>\n      <h2>\n        Movies by genre{' '}\n        {window.dataStore.listOfGenres.find(genre => genre.id == currentGenreId).name} :\n      </h2>\n      {GetMoviesCards(window.dataStore.moviesByGenre)}\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport GetMoviesCards from './GetMoviesCards';\nimport { COMEDY_GENRE_ID, ACTION_GENRE_ID, DOCUMENTARY_GENRE_ID } from '../utils';\n\nfunction ShowMoviesOfTheDay() {\n  return (\n    <>\n      <h2>Movies of the day:</h2>\n      <h4> &#128516; Comedy:</h4>\n      {GetMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie => movie.genre_ids.includes(COMEDY_GENRE_ID)),\n      )}\n\n      <h4> &#128526; Action:</h4>\n      {GetMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie => movie.genre_ids.includes(ACTION_GENRE_ID)),\n      )}\n\n      <h4> &#129488; Documentary:</h4>\n      {GetMoviesCards(\n        window.dataStore.moviesOfTheDay.filter(movie =>\n          movie.genre_ids.includes(DOCUMENTARY_GENRE_ID),\n        ),\n      )}\n    </>\n  );\n}\n\nexport default ShowMoviesOfTheDay;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport GetMoviesCards from './GetMoviesCards';\n\nexport default function ShowMoviesTop() {\n  return (\n    <>\n      <h2>TOP movies of all time:</h2>\n      {GetMoviesCards(window.dataStore.moviesTop)}\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport ShowMoviesByGenre from './ShowMoviesByGenre';\nimport ShowMoviesOfTheDay from './ShowMoviesOfTheDay';\nimport ShowMoviesTop from './ShowMoviesTop';\n\nexport default function MovieResults() {\n  const { currentGenreId, isDataLoading, error } = window.dataStore;\n  let content = '';\n  if (!currentGenreId) {\n    content = 'Please, choose genre from the list';\n  } else {\n    if (isDataLoading) {\n      content = 'Loading...';\n    }\n    if (error !== null) {\n      content = error;\n    } else {\n      content = (\n        <>\n          <ShowMoviesByGenre />\n          <ShowMoviesOfTheDay />\n          <ShowMoviesTop />\n        </>\n      );\n    }\n  }\n  return content ? <div>{content}</div> : '';\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport ShowfilterByGenre from './ShowFilterByGenre';\nimport MovieResults from './MovieResults';\n\nexport default function App() {\n  return (\n    <>\n      <ShowfilterByGenre />\n      <MovieResults />\n    </>\n  );\n}\n","import dataStore from './data/dataStore';\nimport renderApp from './framework/render';\nimport getListOfGenres from './data/movieDbAPI';\nimport App from './components/App';\n\n//if (module.hot) {\n//  module.hot.accept();\n//}\n\nwindow.dataStore = dataStore;\n\ngetListOfGenres().then(() => renderApp(App, document.getElementById('app-root')));\n"]}